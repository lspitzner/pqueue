name:               pqueue
version:            1.4.1.4
category:           Data Structures
author:             Louis Wasserman
license:            BSD3
license-file:       LICENSE
stability:          experimental
synopsis:           Reliable, persistent, fast priority queues.
description:        A fast, reliable priority queue implementation based on a binomial heap.
maintainer:         Lennart Spitzner <hexagoxel@hexagoxel.de>
                    Louis Wasserman <wasserman.louis@gmail.com>
bug-reports:        https://github.com/lspitzner/pqueue/issues
build-type:         Simple
cabal-version:      >= 1.10
tested-with:        GHC == 7.10.3, GHC == 8.0.2, GHC == 8.2.2, GHC == 8.4.4, GHC == 8.6.5, GHC == 8.8.4, GHC == 8.10.7, GHC == 9.0.1, GHC == 9.2.1
extra-source-files:
  CHANGELOG.md

source-repository head
  type: git
  location: git@github.com:lspitzner/pqueue.git

library
  hs-source-dirs: src
  default-language:
    Haskell2010
  build-depends:
  { base >= 4.8 && < 4.17
  , deepseq >= 1.3 && < 1.5
  }
  exposed-modules:
    Data.PQueue.Prio.Min
    Data.PQueue.Prio.Max
    Data.PQueue.Min
    Data.PQueue.Max
  other-modules:
    Data.PQueue.Prio.Internals
    Data.PQueue.Internals
    Data.PQueue.Internals.Down
    Data.PQueue.Internals.Foldable
    Data.PQueue.Prio.Max.Internals
    Control.Applicative.Identity
  if impl(ghc) {
    default-extensions: DeriveDataTypeable
  }
  other-extensions:
      BangPatterns
    , CPP
    , StandaloneDeriving
  ghc-options: {
    -- We currently need -fspec-constr to get GHC to compile conversions
    -- from lists well. We could (and probably should) write those a
    -- bit differently so we won't need it.
    -fspec-constr
    -fdicts-strict
    -Wall
  }
  if impl(ghc >= 8.0) {
    ghc-options: {
      -fno-warn-unused-imports
    }
  }

test-Suite test
  hs-source-dirs: tests
  default-language:
    Haskell2010
  type: exitcode-stdio-1.0
  main-is: PQueueTests.hs
  build-depends:
  { base >= 4.8 && < 4.17
  , deepseq >= 1.3 && < 1.5
  , QuickCheck >= 2.5 && < 3
  , pqueue
  }
  ghc-options: {
    -Wall
  }
  if impl(ghc >= 8.0) {
    ghc-options: {
      -fno-warn-unused-imports
    }
  }
